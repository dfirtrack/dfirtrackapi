openapi: 3.0.2
info:
  title: DFIRTrack
  description: OpenAPI 3 - Documentation of DFIRTrack API
  version: v1.5.5
paths:
  /api/artifact/:
    get:
      operationId: listArtifacts
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artifact'
          description: ''
      tags:
      - api
    post:
      operationId: createArtifact
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Artifact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artifact'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: ''
      tags:
      - api
  /api/artifact/{artifact_id}/:
    get:
      operationId: retrieveArtifact
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: artifact_id
        in: path
        required: true
        description: A unique integer value identifying this artifact.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: ''
      tags:
      - api
    put:
      operationId: updateArtifact
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: artifact_id
        in: path
        required: true
        description: A unique integer value identifying this artifact.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Artifact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artifact'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateArtifact
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: artifact_id
        in: path
        required: true
        description: A unique integer value identifying this artifact.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Artifact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artifact'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifact'
          description: ''
      tags:
      - api
  /api/artifactpriority/:
    get:
      operationId: listArtifactprioritys
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artifactpriority'
          description: ''
      tags:
      - api
  /api/artifactpriority/{artifactpriority_id}/:
    get:
      operationId: retrieveArtifactpriority
      description: 'single object, allowed: GET'
      parameters:
      - name: artifactpriority_id
        in: path
        required: true
        description: A unique integer value identifying this artifactpriority.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifactpriority'
          description: ''
      tags:
      - api
  /api/artifactstatus/:
    get:
      operationId: listArtifactstatus
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artifactstatus'
          description: ''
      tags:
      - api
  /api/artifactstatus/{artifactstatus_id}/:
    get:
      operationId: retrieveArtifactstatus
      description: 'single object, allowed: GET'
      parameters:
      - name: artifactstatus_id
        in: path
        required: true
        description: A unique integer value identifying this artifactstatus.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifactstatus'
          description: ''
      tags:
      - api
  /api/artifacttype/:
    get:
      operationId: listArtifacttypes
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artifacttype'
          description: ''
      tags:
      - api
    post:
      operationId: createArtifacttype
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifacttype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Artifacttype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artifacttype'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifacttype'
          description: ''
      tags:
      - api
  /api/artifacttype/{artifacttype_id}/:
    get:
      operationId: retrieveArtifacttype
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: artifacttype_id
        in: path
        required: true
        description: A unique integer value identifying this artifacttype.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifacttype'
          description: ''
      tags:
      - api
    put:
      operationId: updateArtifacttype
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: artifacttype_id
        in: path
        required: true
        description: A unique integer value identifying this artifacttype.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifacttype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Artifacttype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artifacttype'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifacttype'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateArtifacttype
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: artifacttype_id
        in: path
        required: true
        description: A unique integer value identifying this artifacttype.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Artifacttype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Artifacttype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Artifacttype'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifacttype'
          description: ''
      tags:
      - api
  /api/analysisstatus/:
    get:
      operationId: listAnalysisstatus
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Analysisstatus'
          description: ''
      tags:
      - api
  /api/analysisstatus/{analysisstatus_id}/:
    get:
      operationId: retrieveAnalysisstatus
      description: 'single object, allowed: GET'
      parameters:
      - name: analysisstatus_id
        in: path
        required: true
        description: A unique integer value identifying this analysisstatus.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Analysisstatus'
          description: ''
      tags:
      - api
  /api/case/:
    get:
      operationId: listCases
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Case'
          description: ''
      tags:
      - api
    post:
      operationId: createCase
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Case'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Case'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          description: ''
      tags:
      - api
  /api/case/{case_id}/:
    get:
      operationId: retrieveCase
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: case_id
        in: path
        required: true
        description: A unique integer value identifying this case.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          description: ''
      tags:
      - api
    put:
      operationId: updateCase
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: case_id
        in: path
        required: true
        description: A unique integer value identifying this case.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Case'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Case'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCase
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: case_id
        in: path
        required: true
        description: A unique integer value identifying this case.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Case'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Case'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Case'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
          description: ''
      tags:
      - api
  /api/casepriority/:
    get:
      operationId: listCaseprioritys
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Casepriority'
          description: ''
      tags:
      - api
  /api/casepriority/{casepriority_id}/:
    get:
      operationId: retrieveCasepriority
      description: 'single object, allowed: GET'
      parameters:
      - name: casepriority_id
        in: path
        required: true
        description: A unique integer value identifying this casepriority.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Casepriority'
          description: ''
      tags:
      - api
  /api/casestatus/:
    get:
      operationId: listCasestatus
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Casestatus'
          description: ''
      tags:
      - api
  /api/casestatus/{casestatus_id}/:
    get:
      operationId: retrieveCasestatus
      description: 'single object, allowed: GET'
      parameters:
      - name: casestatus_id
        in: path
        required: true
        description: A unique integer value identifying this casestatus.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Casestatus'
          description: ''
      tags:
      - api
  /api/casetype/:
    get:
      operationId: listCasetypes
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Casetype'
          description: ''
      tags:
      - api
    post:
      operationId: createCasetype
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Casetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Casetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Casetype'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Casetype'
          description: ''
      tags:
      - api
  /api/casetype/{casetype_id}/:
    get:
      operationId: retrieveCasetype
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: casetype_id
        in: path
        required: true
        description: A unique integer value identifying this casetype.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Casetype'
          description: ''
      tags:
      - api
    put:
      operationId: updateCasetype
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: casetype_id
        in: path
        required: true
        description: A unique integer value identifying this casetype.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Casetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Casetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Casetype'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Casetype'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCasetype
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: casetype_id
        in: path
        required: true
        description: A unique integer value identifying this casetype.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Casetype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Casetype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Casetype'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Casetype'
          description: ''
      tags:
      - api
  /api/company/:
    get:
      operationId: listCompanys
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
    post:
      operationId: createCompany
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
  /api/company/{company_id}/:
    get:
      operationId: retrieveCompany
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: company_id
        in: path
        required: true
        description: A unique integer value identifying this company.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
    put:
      operationId: updateCompany
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: company_id
        in: path
        required: true
        description: A unique integer value identifying this company.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateCompany
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: company_id
        in: path
        required: true
        description: A unique integer value identifying this company.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Company'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Company'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'
          description: ''
      tags:
      - api
  /api/contact/:
    get:
      operationId: listContacts
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
    post:
      operationId: createContact
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
  /api/contact/{contact_id}/:
    get:
      operationId: retrieveContact
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: contact_id
        in: path
        required: true
        description: A unique integer value identifying this contact.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
    put:
      operationId: updateContact
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: contact_id
        in: path
        required: true
        description: A unique integer value identifying this contact.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateContact
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: contact_id
        in: path
        required: true
        description: A unique integer value identifying this contact.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Contact'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Contact'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
          description: ''
      tags:
      - api
  /api/division/:
    get:
      operationId: listDivisions
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Division'
          description: ''
      tags:
      - api
    post:
      operationId: createDivision
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Division'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Division'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Division'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Division'
          description: ''
      tags:
      - api
  /api/division/{division_id}/:
    get:
      operationId: retrieveDivision
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: division_id
        in: path
        required: true
        description: A unique integer value identifying this division.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Division'
          description: ''
      tags:
      - api
    put:
      operationId: updateDivision
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: division_id
        in: path
        required: true
        description: A unique integer value identifying this division.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Division'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Division'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Division'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Division'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDivision
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: division_id
        in: path
        required: true
        description: A unique integer value identifying this division.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Division'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Division'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Division'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Division'
          description: ''
      tags:
      - api
  /api/dnsname/:
    get:
      operationId: listDnsnames
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Dnsname'
          description: ''
      tags:
      - api
    post:
      operationId: createDnsname
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dnsname'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dnsname'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dnsname'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dnsname'
          description: ''
      tags:
      - api
  /api/dnsname/{dnsname_id}/:
    get:
      operationId: retrieveDnsname
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: dnsname_id
        in: path
        required: true
        description: A unique integer value identifying this dnsname.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dnsname'
          description: ''
      tags:
      - api
    put:
      operationId: updateDnsname
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: dnsname_id
        in: path
        required: true
        description: A unique integer value identifying this dnsname.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dnsname'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dnsname'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dnsname'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dnsname'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDnsname
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: dnsname_id
        in: path
        required: true
        description: A unique integer value identifying this dnsname.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Dnsname'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Dnsname'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Dnsname'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Dnsname'
          description: ''
      tags:
      - api
  /api/domain/:
    get:
      operationId: listDomains
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domain'
          description: ''
      tags:
      - api
    post:
      operationId: createDomain
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Domain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ''
      tags:
      - api
  /api/domain/{domain_id}/:
    get:
      operationId: retrieveDomain
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: domain_id
        in: path
        required: true
        description: A unique integer value identifying this domain.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ''
      tags:
      - api
    put:
      operationId: updateDomain
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: domain_id
        in: path
        required: true
        description: A unique integer value identifying this domain.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Domain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDomain
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: domain_id
        in: path
        required: true
        description: A unique integer value identifying this domain.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domain'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Domain'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Domain'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: ''
      tags:
      - api
  /api/domainuser/:
    get:
      operationId: listDomainusers
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Domainuser'
          description: ''
      tags:
      - api
    post:
      operationId: createDomainuser
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domainuser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Domainuser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Domainuser'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domainuser'
          description: ''
      tags:
      - api
  /api/domainuser/{domainuser_id}/:
    get:
      operationId: retrieveDomainuser
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: domainuser_id
        in: path
        required: true
        description: A unique integer value identifying this domainuser.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domainuser'
          description: ''
      tags:
      - api
    put:
      operationId: updateDomainuser
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: domainuser_id
        in: path
        required: true
        description: A unique integer value identifying this domainuser.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domainuser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Domainuser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Domainuser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domainuser'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateDomainuser
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: domainuser_id
        in: path
        required: true
        description: A unique integer value identifying this domainuser.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Domainuser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Domainuser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Domainuser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domainuser'
          description: ''
      tags:
      - api
  /api/headline/:
    get:
      operationId: listHeadlines
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Headline'
          description: ''
      tags:
      - api
    post:
      operationId: createHeadline
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Headline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Headline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Headline'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Headline'
          description: ''
      tags:
      - api
  /api/headline/{headline_id}/:
    get:
      operationId: retrieveHeadline
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: headline_id
        in: path
        required: true
        description: A unique integer value identifying this headline.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Headline'
          description: ''
      tags:
      - api
    put:
      operationId: updateHeadline
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: headline_id
        in: path
        required: true
        description: A unique integer value identifying this headline.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Headline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Headline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Headline'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Headline'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateHeadline
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: headline_id
        in: path
        required: true
        description: A unique integer value identifying this headline.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Headline'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Headline'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Headline'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Headline'
          description: ''
      tags:
      - api
  /api/ip/:
    get:
      operationId: listIps
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ip'
          description: ''
      tags:
      - api
    post:
      operationId: createIp
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ip'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip'
          description: ''
      tags:
      - api
  /api/ip/{ip_id}/:
    get:
      operationId: retrieveIp
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: ip_id
        in: path
        required: true
        description: A unique integer value identifying this ip.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip'
          description: ''
      tags:
      - api
    put:
      operationId: updateIp
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: ip_id
        in: path
        required: true
        description: A unique integer value identifying this ip.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ip'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateIp
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: ip_id
        in: path
        required: true
        description: A unique integer value identifying this ip.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Ip'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Ip'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Ip'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Ip'
          description: ''
      tags:
      - api
  /api/location/:
    get:
      operationId: listLocations
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
    post:
      operationId: createLocation
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
  /api/location/{location_id}/:
    get:
      operationId: retrieveLocation
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: location_id
        in: path
        required: true
        description: A unique integer value identifying this location.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
    put:
      operationId: updateLocation
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: location_id
        in: path
        required: true
        description: A unique integer value identifying this location.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateLocation
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: location_id
        in: path
        required: true
        description: A unique integer value identifying this location.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Location'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Location'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Location'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Location'
          description: ''
      tags:
      - api
  /api/note/:
    get:
      operationId: listNotes
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
    post:
      operationId: createNote
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
  /api/note/{note_id}/:
    get:
      operationId: retrieveNote
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: note_id
        in: path
        required: true
        description: A unique integer value identifying this note.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
    put:
      operationId: updateNote
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: note_id
        in: path
        required: true
        description: A unique integer value identifying this note.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateNote
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: note_id
        in: path
        required: true
        description: A unique integer value identifying this note.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Note'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Note'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Note'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
          description: ''
      tags:
      - api
  /api/notestatus/:
    get:
      operationId: listNotestatus
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notestatus'
          description: ''
      tags:
      - api
  /api/notestatus/{notestatus_id}/:
    get:
      operationId: retrieveNotestatus
      description: 'single object, allowed: GET'
      parameters:
      - name: notestatus_id
        in: path
        required: true
        description: A unique integer value identifying this notestatus.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notestatus'
          description: ''
      tags:
      - api
  /api/os/:
    get:
      operationId: listOs
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Os'
          description: ''
      tags:
      - api
    post:
      operationId: createOs
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Os'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Os'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os'
          description: ''
      tags:
      - api
  /api/os/{os_id}/:
    get:
      operationId: retrieveOs
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: os_id
        in: path
        required: true
        description: A unique integer value identifying this os.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os'
          description: ''
      tags:
      - api
    put:
      operationId: updateOs
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: os_id
        in: path
        required: true
        description: A unique integer value identifying this os.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Os'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Os'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOs
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: os_id
        in: path
        required: true
        description: A unique integer value identifying this os.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Os'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Os'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Os'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Os'
          description: ''
      tags:
      - api
  /api/osarch/:
    get:
      operationId: listOsarchs
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Osarch'
          description: ''
      tags:
      - api
    post:
      operationId: createOsarch
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Osarch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Osarch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Osarch'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Osarch'
          description: ''
      tags:
      - api
  /api/osarch/{osarch_id}/:
    get:
      operationId: retrieveOsarch
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: osarch_id
        in: path
        required: true
        description: A unique integer value identifying this osarch.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Osarch'
          description: ''
      tags:
      - api
    put:
      operationId: updateOsarch
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: osarch_id
        in: path
        required: true
        description: A unique integer value identifying this osarch.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Osarch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Osarch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Osarch'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Osarch'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateOsarch
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: osarch_id
        in: path
        required: true
        description: A unique integer value identifying this osarch.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Osarch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Osarch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Osarch'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Osarch'
          description: ''
      tags:
      - api
  /api/reason/:
    get:
      operationId: listReasons
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reason'
          description: ''
      tags:
      - api
    post:
      operationId: createReason
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reason'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reason'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reason'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reason'
          description: ''
      tags:
      - api
  /api/reason/{reason_id}/:
    get:
      operationId: retrieveReason
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: reason_id
        in: path
        required: true
        description: A unique integer value identifying this reason.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reason'
          description: ''
      tags:
      - api
    put:
      operationId: updateReason
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: reason_id
        in: path
        required: true
        description: A unique integer value identifying this reason.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reason'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reason'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reason'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reason'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateReason
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: reason_id
        in: path
        required: true
        description: A unique integer value identifying this reason.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reason'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reason'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reason'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reason'
          description: ''
      tags:
      - api
  /api/recommendation/:
    get:
      operationId: listRecommendations
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Recommendation'
          description: ''
      tags:
      - api
    post:
      operationId: createRecommendation
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recommendation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recommendation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recommendation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
          description: ''
      tags:
      - api
  /api/recommendation/{recommendation_id}/:
    get:
      operationId: retrieveRecommendation
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: recommendation_id
        in: path
        required: true
        description: A unique integer value identifying this recommendation.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
          description: ''
      tags:
      - api
    put:
      operationId: updateRecommendation
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: recommendation_id
        in: path
        required: true
        description: A unique integer value identifying this recommendation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recommendation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recommendation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recommendation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateRecommendation
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: recommendation_id
        in: path
        required: true
        description: A unique integer value identifying this recommendation.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Recommendation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Recommendation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Recommendation'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Recommendation'
          description: ''
      tags:
      - api
  /api/reportitem/:
    get:
      operationId: listReportitems
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reportitem'
          description: ''
      tags:
      - api
    post:
      operationId: createReportitem
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reportitem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reportitem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reportitem'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reportitem'
          description: ''
      tags:
      - api
  /api/reportitem/{reportitem_id}/:
    get:
      operationId: retrieveReportitem
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: reportitem_id
        in: path
        required: true
        description: A unique integer value identifying this reportitem.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reportitem'
          description: ''
      tags:
      - api
    put:
      operationId: updateReportitem
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: reportitem_id
        in: path
        required: true
        description: A unique integer value identifying this reportitem.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reportitem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reportitem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reportitem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reportitem'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateReportitem
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: reportitem_id
        in: path
        required: true
        description: A unique integer value identifying this reportitem.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reportitem'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Reportitem'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Reportitem'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reportitem'
          description: ''
      tags:
      - api
  /api/serviceprovider/:
    get:
      operationId: listServiceproviders
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Serviceprovider'
          description: ''
      tags:
      - api
    post:
      operationId: createServiceprovider
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Serviceprovider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Serviceprovider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Serviceprovider'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serviceprovider'
          description: ''
      tags:
      - api
  /api/serviceprovider/{serviceprovider_id}/:
    get:
      operationId: retrieveServiceprovider
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: serviceprovider_id
        in: path
        required: true
        description: A unique integer value identifying this serviceprovider.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serviceprovider'
          description: ''
      tags:
      - api
    put:
      operationId: updateServiceprovider
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: serviceprovider_id
        in: path
        required: true
        description: A unique integer value identifying this serviceprovider.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Serviceprovider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Serviceprovider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Serviceprovider'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serviceprovider'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateServiceprovider
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: serviceprovider_id
        in: path
        required: true
        description: A unique integer value identifying this serviceprovider.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Serviceprovider'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Serviceprovider'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Serviceprovider'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Serviceprovider'
          description: ''
      tags:
      - api
  /api/system/:
    get:
      operationId: listSystems
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/System'
          description: ''
      tags:
      - api
    post:
      operationId: createSystem
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/System'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
      tags:
      - api
  /api/system/{system_id}/:
    get:
      operationId: retrieveSystem
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: system_id
        in: path
        required: true
        description: A unique integer value identifying this system.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
      tags:
      - api
    put:
      operationId: updateSystem
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: system_id
        in: path
        required: true
        description: A unique integer value identifying this system.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/System'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSystem
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: system_id
        in: path
        required: true
        description: A unique integer value identifying this system.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/System'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/System'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/System'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/System'
          description: ''
      tags:
      - api
  /api/systemstatus/:
    get:
      operationId: listSystemstatus
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Systemstatus'
          description: ''
      tags:
      - api
  /api/systemstatus/{systemstatus_id}/:
    get:
      operationId: retrieveSystemstatus
      description: 'single object, allowed: GET'
      parameters:
      - name: systemstatus_id
        in: path
        required: true
        description: A unique integer value identifying this systemstatus.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemstatus'
          description: ''
      tags:
      - api
  /api/systemtype/:
    get:
      operationId: listSystemtypes
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Systemtype'
          description: ''
      tags:
      - api
    post:
      operationId: createSystemtype
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtype'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtype'
          description: ''
      tags:
      - api
  /api/systemtype/{systemtype_id}/:
    get:
      operationId: retrieveSystemtype
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: systemtype_id
        in: path
        required: true
        description: A unique integer value identifying this systemtype.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtype'
          description: ''
      tags:
      - api
    put:
      operationId: updateSystemtype
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: systemtype_id
        in: path
        required: true
        description: A unique integer value identifying this systemtype.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtype'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtype'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSystemtype
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: systemtype_id
        in: path
        required: true
        description: A unique integer value identifying this systemtype.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemtype'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemtype'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemtype'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemtype'
          description: ''
      tags:
      - api
  /api/systemuser/:
    get:
      operationId: listSystemusers
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Systemuser'
          description: ''
      tags:
      - api
    post:
      operationId: createSystemuser
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemuser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemuser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemuser'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemuser'
          description: ''
      tags:
      - api
  /api/systemuser/{systemuser_id}/:
    get:
      operationId: retrieveSystemuser
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: systemuser_id
        in: path
        required: true
        description: A unique integer value identifying this systemuser.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemuser'
          description: ''
      tags:
      - api
    put:
      operationId: updateSystemuser
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: systemuser_id
        in: path
        required: true
        description: A unique integer value identifying this systemuser.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemuser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemuser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemuser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemuser'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateSystemuser
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: systemuser_id
        in: path
        required: true
        description: A unique integer value identifying this systemuser.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Systemuser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Systemuser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Systemuser'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Systemuser'
          description: ''
      tags:
      - api
  /api/tag/:
    get:
      operationId: listTags
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
    post:
      operationId: createTag
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
  /api/tag/{tag_id}/:
    get:
      operationId: retrieveTag
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: tag_id
        in: path
        required: true
        description: A unique integer value identifying this tag.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
    put:
      operationId: updateTag
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: tag_id
        in: path
        required: true
        description: A unique integer value identifying this tag.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTag
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: tag_id
        in: path
        required: true
        description: A unique integer value identifying this tag.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tag'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Tag'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Tag'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tag'
          description: ''
      tags:
      - api
  /api/tagcolor/:
    get:
      operationId: listTagcolors
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tagcolor'
          description: ''
      tags:
      - api
  /api/tagcolor/{tagcolor_id}/:
    get:
      operationId: retrieveTagcolor
      description: 'single object, allowed: GET'
      parameters:
      - name: tagcolor_id
        in: path
        required: true
        description: A unique integer value identifying this tagcolor.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tagcolor'
          description: ''
      tags:
      - api
  /api/task/:
    get:
      operationId: listTasks
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    post:
      operationId: createTask
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
  /api/task/{task_id}/:
    get:
      operationId: retrieveTask
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: task_id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    put:
      operationId: updateTask
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: task_id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTask
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: task_id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
  /api/taskname/:
    get:
      operationId: listTasknames
      description: 'all objects, allowed: GET + POST'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taskname'
          description: ''
      tags:
      - api
    post:
      operationId: createTaskname
      description: 'all objects, allowed: GET + POST'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Taskname'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Taskname'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Taskname'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taskname'
          description: ''
      tags:
      - api
  /api/taskname/{taskname_id}/:
    get:
      operationId: retrieveTaskname
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: taskname_id
        in: path
        required: true
        description: A unique integer value identifying this taskname.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taskname'
          description: ''
      tags:
      - api
    put:
      operationId: updateTaskname
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: taskname_id
        in: path
        required: true
        description: A unique integer value identifying this taskname.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Taskname'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Taskname'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Taskname'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taskname'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTaskname
      description: 'single object, allowed: GET + PUT'
      parameters:
      - name: taskname_id
        in: path
        required: true
        description: A unique integer value identifying this taskname.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Taskname'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Taskname'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Taskname'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taskname'
          description: ''
      tags:
      - api
  /api/taskpriority/:
    get:
      operationId: listTaskprioritys
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taskpriority'
          description: ''
      tags:
      - api
  /api/taskpriority/{taskpriority_id}/:
    get:
      operationId: retrieveTaskpriority
      description: 'single object, allowed: GET'
      parameters:
      - name: taskpriority_id
        in: path
        required: true
        description: A unique integer value identifying this taskpriority.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taskpriority'
          description: ''
      tags:
      - api
  /api/taskstatus/:
    get:
      operationId: listTaskstatus
      description: 'all objects, allowed: GET'
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Taskstatus'
          description: ''
      tags:
      - api
  /api/taskstatus/{taskstatus_id}/:
    get:
      operationId: retrieveTaskstatus
      description: 'single object, allowed: GET'
      parameters:
      - name: taskstatus_id
        in: path
        required: true
        description: A unique integer value identifying this taskstatus.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Taskstatus'
          description: ''
      tags:
      - api
  /api/token-auth/:
    post:
      operationId: createAuthToken
      description: ''
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthToken'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthToken'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
      tags:
      - api
components:
  schemas:
    Artifact:
      type: object
      properties:
        artifact_id:
          type: integer
          readOnly: true
        artifact_uuid:
          type: string
          format: uuid
          readOnly: true
        artifact_name:
          type: string
          maxLength: 4096
        artifactpriority:
          type: integer
        artifactstatus:
          type: integer
        artifacttype:
          type: integer
        case:
          type: integer
          nullable: true
        system:
          type: integer
        tag:
          type: array
          items:
            type: integer
        artifact_md5:
          type: string
          nullable: true
          maxLength: 32
        artifact_sha1:
          type: string
          nullable: true
          maxLength: 40
        artifact_sha256:
          type: string
          nullable: true
          maxLength: 64
        artifact_source_path:
          type: string
          nullable: true
          maxLength: 4096
        artifact_storage_path:
          type: string
          readOnly: true
        artifact_acquisition_time:
          type: string
          format: date-time
          nullable: true
        artifact_requested_time:
          type: string
          format: date-time
          nullable: true
        artifact_create_time:
          type: string
          format: date-time
          readOnly: true
        artifact_created_by_user_id:
          type: integer
        artifact_modify_time:
          type: string
          format: date-time
          readOnly: true
        artifact_modified_by_user_id:
          type: integer
      required:
      - artifact_name
      - artifacttype
      - system
      - artifact_created_by_user_id
      - artifact_modified_by_user_id
    Artifactpriority:
      type: object
      properties:
        artifactpriority_id:
          type: integer
          readOnly: true
        artifactpriority_name:
          type: string
          maxLength: 255
      required:
      - artifactpriority_name
    Artifactstatus:
      type: object
      properties:
        artifactstatus_id:
          type: integer
          readOnly: true
        artifactstatus_name:
          type: string
          maxLength: 255
      required:
      - artifactstatus_name
    Artifacttype:
      type: object
      properties:
        artifacttype_id:
          type: integer
          readOnly: true
        artifacttype_name:
          type: string
          maxLength: 255
      required:
      - artifacttype_name
    Analysisstatus:
      type: object
      properties:
        analysisstatus_id:
          type: integer
          readOnly: true
        analysisstatus_name:
          type: string
          maxLength: 30
      required:
      - analysisstatus_name
    Case:
      type: object
      properties:
        case_id:
          type: integer
          readOnly: true
        case_id_external:
          type: string
          nullable: true
          maxLength: 50
        case_name:
          type: string
          maxLength: 50
        casepriority:
          type: integer
        casestatus:
          type: integer
        casetype:
          type: integer
          nullable: true
        tag:
          type: array
          items:
            type: integer
        case_is_incident:
          type: boolean
        case_start_time:
          type: string
          format: date-time
          nullable: true
        case_end_time:
          type: string
          format: date-time
          nullable: true
        case_created_by_user_id:
          type: integer
        case_create_time:
          type: string
          format: date-time
          readOnly: true
        case_modified_by_user_id:
          type: integer
          nullable: true
        case_modify_time:
          type: string
          format: date-time
          readOnly: true
      required:
      - case_name
      - case_is_incident
      - case_created_by_user_id
    Casepriority:
      type: object
      properties:
        casepriority_id:
          type: integer
          readOnly: true
        casepriority_name:
          type: string
          maxLength: 255
      required:
      - casepriority_name
    Casestatus:
      type: object
      properties:
        casestatus_id:
          type: integer
          readOnly: true
        casestatus_name:
          type: string
          maxLength: 255
      required:
      - casestatus_name
    Casetype:
      type: object
      properties:
        casetype_id:
          type: integer
          readOnly: true
        casetype_name:
          type: string
          maxLength: 255
      required:
      - casetype_name
    Company:
      type: object
      properties:
        company_id:
          type: integer
          readOnly: true
        company_name:
          type: string
          maxLength: 50
        division:
          type: integer
          nullable: true
      required:
      - company_name
    Contact:
      type: object
      properties:
        contact_id:
          type: integer
          readOnly: true
        contact_name:
          type: string
          maxLength: 100
        contact_email:
          type: string
          maxLength: 100
        contact_phone:
          type: string
          nullable: true
          maxLength: 50
      required:
      - contact_name
      - contact_email
    Division:
      type: object
      properties:
        division_id:
          type: integer
          readOnly: true
        division_name:
          type: string
          maxLength: 50
      required:
      - division_name
    Dnsname:
      type: object
      properties:
        dnsname_id:
          type: integer
          readOnly: true
        dnsname_name:
          type: string
          maxLength: 100
        domain:
          type: integer
          nullable: true
      required:
      - dnsname_name
    Domain:
      type: object
      properties:
        domain_id:
          type: integer
          readOnly: true
        domain_name:
          type: string
          maxLength: 100
      required:
      - domain_name
    Domainuser:
      type: object
      properties:
        domainuser_id:
          type: integer
          readOnly: true
        domainuser_name:
          type: string
          maxLength: 50
        domain:
          type: integer
        domainuser_is_domainadmin:
          type: boolean
          nullable: true
      required:
      - domainuser_name
      - domain
    Headline:
      type: object
      properties:
        headline_id:
          type: integer
          readOnly: true
        headline_name:
          type: string
          maxLength: 100
      required:
      - headline_name
    Ip:
      type: object
      properties:
        ip_id:
          type: integer
          readOnly: true
        ip_ip:
          type: string
      required:
      - ip_ip
    Location:
      type: object
      properties:
        location_id:
          type: integer
          readOnly: true
        location_name:
          type: string
          maxLength: 50
      required:
      - location_name
    Note:
      type: object
      properties:
        note_id:
          type: integer
          readOnly: true
        note_title:
          type: string
          maxLength: 250
        note_content:
          type: string
        note_version:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
        case:
          type: integer
          nullable: true
        notestatus:
          type: integer
        tag:
          type: array
          items:
            type: integer
        note_create_time:
          type: string
          format: date-time
          readOnly: true
        note_created_by_user_id:
          type: integer
        note_modify_time:
          type: string
          format: date-time
          readOnly: true
        note_modified_by_user_id:
          type: integer
      required:
      - note_title
      - note_content
      - note_version
      - note_created_by_user_id
      - note_modified_by_user_id
    Notestatus:
      type: object
      properties:
        notestatus_id:
          type: integer
          readOnly: true
        notestatus_name:
          type: string
          maxLength: 30
      required:
      - notestatus_name
    Os:
      type: object
      properties:
        os_id:
          type: integer
          readOnly: true
        os_name:
          type: string
          maxLength: 30
      required:
      - os_name
    Osarch:
      type: object
      properties:
        osarch_id:
          type: integer
          readOnly: true
        osarch_name:
          type: string
          maxLength: 10
      required:
      - osarch_name
    Reason:
      type: object
      properties:
        reason_id:
          type: integer
          readOnly: true
        reason_name:
          type: string
          maxLength: 30
      required:
      - reason_name
    Recommendation:
      type: object
      properties:
        recommendation_id:
          type: integer
          readOnly: true
        recommendation_name:
          type: string
          maxLength: 30
      required:
      - recommendation_name
    Reportitem:
      type: object
      properties:
        reportitem_id:
          type: integer
          readOnly: true
        case:
          type: integer
          nullable: true
        headline:
          type: integer
        notestatus:
          type: integer
        system:
          type: integer
        tag:
          type: array
          items:
            type: integer
        reportitem_subheadline:
          type: string
          nullable: true
          maxLength: 100
        reportitem_note:
          type: string
        reportitem_create_time:
          type: string
          format: date-time
          readOnly: true
        reportitem_created_by_user_id:
          type: integer
        reportitem_modify_time:
          type: string
          format: date-time
          readOnly: true
        reportitem_modified_by_user_id:
          type: integer
      required:
      - headline
      - system
      - reportitem_subheadline
      - reportitem_note
      - reportitem_created_by_user_id
      - reportitem_modified_by_user_id
    Serviceprovider:
      type: object
      properties:
        serviceprovider_id:
          type: integer
          readOnly: true
        serviceprovider_name:
          type: string
          maxLength: 50
      required:
      - serviceprovider_name
    System:
      type: object
      properties:
        system_id:
          type: integer
          readOnly: true
        system_uuid:
          type: string
          format: uuid
          readOnly: true
        system_name:
          type: string
          maxLength: 50
        domain:
          type: integer
          nullable: true
        dnsname:
          type: integer
          nullable: true
        systemstatus:
          type: integer
        analysisstatus:
          type: integer
          nullable: true
        reason:
          type: integer
          nullable: true
        recommendation:
          type: integer
          nullable: true
        systemtype:
          type: integer
          nullable: true
        ip:
          type: array
          items:
            type: integer
        os:
          type: integer
          nullable: true
        osarch:
          type: integer
          nullable: true
        system_lastbooted_time:
          type: string
          format: date-time
          nullable: true
        system_deprecated_time:
          type: string
          format: date-time
          nullable: true
        system_is_vm:
          type: boolean
          nullable: true
        host_system:
          type: integer
          nullable: true
        company:
          type: array
          items:
            type: integer
        location:
          type: integer
          nullable: true
        serviceprovider:
          type: integer
          nullable: true
        contact:
          type: integer
          nullable: true
        tag:
          type: array
          items:
            type: integer
        case:
          type: array
          items:
            type: integer
        system_create_time:
          type: string
          format: date-time
          readOnly: true
        system_created_by_user_id:
          type: integer
        system_modify_time:
          type: string
          format: date-time
          readOnly: true
        system_modified_by_user_id:
          type: integer
        system_export_markdown:
          type: boolean
        system_export_spreadsheet:
          type: boolean
      required:
      - system_name
      - systemstatus
      - system_created_by_user_id
      - system_modified_by_user_id
    Systemstatus:
      type: object
      properties:
        systemstatus_id:
          type: integer
          readOnly: true
        systemstatus_name:
          type: string
          maxLength: 30
      required:
      - systemstatus_name
    Systemtype:
      type: object
      properties:
        systemtype_id:
          type: integer
          readOnly: true
        systemtype_name:
          type: string
          maxLength: 50
      required:
      - systemtype_name
    Systemuser:
      type: object
      properties:
        systemuser_id:
          type: integer
          readOnly: true
        systemuser_name:
          type: string
          maxLength: 50
        system:
          type: integer
        systemuser_lastlogon_time:
          type: string
          format: date-time
          nullable: true
        systemuser_is_systemadmin:
          type: boolean
          nullable: true
      required:
      - systemuser_name
      - system
    Tag:
      type: object
      properties:
        tag_id:
          type: integer
          readOnly: true
        tag_name:
          type: string
          maxLength: 50
        tag_note:
          type: string
          nullable: true
        tagcolor:
          type: integer
      required:
      - tag_name
      - tagcolor
    Tagcolor:
      type: object
      properties:
        tagcolor_id:
          type: integer
          readOnly: true
        tagcolor_name:
          type: string
          maxLength: 20
      required:
      - tagcolor_name
    Task:
      type: object
      properties:
        task_id:
          type: integer
          readOnly: true
        parent_task:
          type: integer
          nullable: true
        taskname:
          type: integer
        taskpriority:
          type: integer
        taskstatus:
          type: integer
        artifact:
          type: integer
          nullable: true
        case:
          type: integer
          nullable: true
        system:
          type: integer
          nullable: true
        task_assigned_to_user_id:
          type: integer
          nullable: true
        tag:
          type: array
          items:
            type: integer
        task_scheduled_time:
          type: string
          format: date-time
          nullable: true
        task_started_time:
          type: string
          format: date-time
          nullable: true
        task_finished_time:
          type: string
          format: date-time
          nullable: true
        task_due_time:
          type: string
          format: date-time
          nullable: true
        task_create_time:
          type: string
          format: date-time
          readOnly: true
        task_modify_time:
          type: string
          format: date-time
          readOnly: true
        task_created_by_user_id:
          type: integer
        task_modified_by_user_id:
          type: integer
      required:
      - taskname
      - taskpriority
      - taskstatus
      - task_created_by_user_id
      - task_modified_by_user_id
    Taskname:
      type: object
      properties:
        taskname_id:
          type: integer
          readOnly: true
        taskname_name:
          type: string
          maxLength: 50
      required:
      - taskname_name
    Taskpriority:
      type: object
      properties:
        taskpriority_id:
          type: integer
          readOnly: true
        taskpriority_name:
          type: string
          maxLength: 50
      required:
      - taskpriority_name
    Taskstatus:
      type: object
      properties:
        taskstatus_id:
          type: integer
          readOnly: true
        taskstatus_name:
          type: string
          maxLength: 50
      required:
      - taskstatus_name
    AuthToken:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
        token:
          type: string
          readOnly: true
      required:
      - username
      - password
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: basic authentication
    bearerAuth:
      type: http
      scheme: bearer
      name: Token
      description: API Token authentication
security:
- basicAuth: []
- bearerAuth: []
