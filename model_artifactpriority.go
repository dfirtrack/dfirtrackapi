/*
 * DFIRTrack
 *
 * OpenAPI 3 - Documentation of DFIRTrack API
 *
 * API version: v1.5.3
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package dfirtrackapi

import (
	"encoding/json"
)

// Artifactpriority struct for Artifactpriority
type Artifactpriority struct {
	ArtifactpriorityId *int32 `json:"artifactpriority_id,omitempty"`
	ArtifactpriorityName string `json:"artifactpriority_name"`
}

// NewArtifactpriority instantiates a new Artifactpriority object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewArtifactpriority(artifactpriorityName string, ) *Artifactpriority {
	this := Artifactpriority{}
	this.ArtifactpriorityName = artifactpriorityName
	return &this
}

// NewArtifactpriorityWithDefaults instantiates a new Artifactpriority object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewArtifactpriorityWithDefaults() *Artifactpriority {
	this := Artifactpriority{}
	return &this
}

// GetArtifactpriorityId returns the ArtifactpriorityId field value if set, zero value otherwise.
func (o *Artifactpriority) GetArtifactpriorityId() int32 {
	if o == nil || o.ArtifactpriorityId == nil {
		var ret int32
		return ret
	}
	return *o.ArtifactpriorityId
}

// GetArtifactpriorityIdOk returns a tuple with the ArtifactpriorityId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Artifactpriority) GetArtifactpriorityIdOk() (*int32, bool) {
	if o == nil || o.ArtifactpriorityId == nil {
		return nil, false
	}
	return o.ArtifactpriorityId, true
}

// HasArtifactpriorityId returns a boolean if a field has been set.
func (o *Artifactpriority) HasArtifactpriorityId() bool {
	if o != nil && o.ArtifactpriorityId != nil {
		return true
	}

	return false
}

// SetArtifactpriorityId gets a reference to the given int32 and assigns it to the ArtifactpriorityId field.
func (o *Artifactpriority) SetArtifactpriorityId(v int32) {
	o.ArtifactpriorityId = &v
}

// GetArtifactpriorityName returns the ArtifactpriorityName field value
func (o *Artifactpriority) GetArtifactpriorityName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.ArtifactpriorityName
}

// GetArtifactpriorityNameOk returns a tuple with the ArtifactpriorityName field value
// and a boolean to check if the value has been set.
func (o *Artifactpriority) GetArtifactpriorityNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ArtifactpriorityName, true
}

// SetArtifactpriorityName sets field value
func (o *Artifactpriority) SetArtifactpriorityName(v string) {
	o.ArtifactpriorityName = v
}

func (o Artifactpriority) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ArtifactpriorityId != nil {
		toSerialize["artifactpriority_id"] = o.ArtifactpriorityId
	}
	if true {
		toSerialize["artifactpriority_name"] = o.ArtifactpriorityName
	}
	return json.Marshal(toSerialize)
}

type NullableArtifactpriority struct {
	value *Artifactpriority
	isSet bool
}

func (v NullableArtifactpriority) Get() *Artifactpriority {
	return v.value
}

func (v *NullableArtifactpriority) Set(val *Artifactpriority) {
	v.value = val
	v.isSet = true
}

func (v NullableArtifactpriority) IsSet() bool {
	return v.isSet
}

func (v *NullableArtifactpriority) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableArtifactpriority(val *Artifactpriority) *NullableArtifactpriority {
	return &NullableArtifactpriority{value: val, isSet: true}
}

func (v NullableArtifactpriority) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableArtifactpriority) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


